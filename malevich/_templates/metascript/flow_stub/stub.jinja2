@overload
def {{reverse_id}}(
    version: Literal['{{integration.version}}'] = None,
    branch: Literal['{{integration.branch}}'] = None,
    *args,
    {%- with injectables=integration.injectables -%}
        {% include "args.jinja2" %}
    {%- endwith %}
    {% filter indent(width=4) %}
        {%- include "common_args.jinja2" -%}
    {% endfilter %},
    get_task: Literal[False] = False,
    wait_for_results: Literal[True] = True,
    **kwargs
) -> list[BaseResult]:
    pass

@overload
def {{reverse_id}}(
    version: Literal['{{integration.version}}'] = None,
    branch: Literal['{{integration.branch}}'] = None,
    *args,
    {%- with injectables=integration.injectables -%}
        {% include "args.jinja2" %}
    {%- endwith %}
    {% filter indent(width=4) %}
        {%- include "common_args.jinja2" -%}
    {% endfilter %},
    get_task: Literal[True] = True,
    wait_for_results: bool = False,
    **kwargs
) -> SpaceTask:
    pass

@overload
def {{reverse_id}}(
    version: Literal['{{integration.version}}'] = None,
    branch: Literal['{{integration.branch}}'] = None,
    *args,
    {%- with injectables=integration.injectables -%}
        {% include "args.jinja2" %}
    {%- endwith %}
    {% filter indent(width=4) %}
        {%- include "common_args.jinja2" -%}
    {% endfilter %},
    get_task: Literal[False] = False,
    wait_for_results: Literal[False] = False,
    **kwargs
) -> list[BaseResult]:
    pass



